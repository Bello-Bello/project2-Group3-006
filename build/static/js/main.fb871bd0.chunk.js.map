{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","scheduleDict","setScheduleDict","suggestDict","setSuggestDict","eventInput","useRef","startTimeInput","endTimeInput","dateInput","messages","suggestDuration","suggestInput","Schedule","props","class","onClick","newDict","filter","item","event","startTime","endTime","Suggest","newSuggestDict","suggestion","suggest","duration","src","alt","href","align","map","dictItem","ref","type","placeholder","for","id","newSuggest","current","value","newSuggestDuration","onAddClickSuggest","newEvent","newStartTime","newEndTime","newScheduleDict","onAddClick","fetch","method","headers","body","JSON","stringify","then","response","json","data","i","message_server","length","alert","schedule_server","suggest_server","response_data","currentDate","window","location","replace","onCompleteClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAkOeA,MA/Nf,WACE,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EAAaC,iBAAO,IACpBC,EAAiBD,iBAAO,IACxBE,EAAeF,iBAAO,IACtBG,EAAYH,iBAAO,IACnBI,EAAWJ,iBAAO,IAClBK,EAAkBL,iBAAO,IACzBM,EAAeN,iBAAO,IAG5B,SAASO,EAASC,GAKhB,OACE,6BACE,yBAAQC,MAAM,aAAaC,QAN/B,WACE,IAAMC,EAAUhB,EAAaiB,QAAO,SAACC,GAAD,OAAUA,EAAKC,QAAUN,EAAMK,QACnEjB,EAAgBe,IAId,UACGH,EAAMK,KADT,SACqBL,EAAMO,UAD3B,OAC0CP,EAAMQ,aAMtD,SAASC,EAAQT,GAMf,OACE,6BACE,yBAAQC,MAAM,aAAaC,QAP/B,WACE,IAAMQ,EAAiBrB,EAAYe,QAAO,SAACC,GAAD,OAAUA,EAAKM,aAAeX,EAAMY,WAC9EtB,EAAeoB,IAKb,UACGV,EAAMY,QADT,QACuBZ,EAAMa,SAD7B,cAwEN,OACE,sBAAKZ,MAAM,uBAAX,UACE,iCACE,sBAAKA,MAAM,YAAX,UACE,sBAAKA,MAAM,OAAX,UACE,qBACEa,IAAI,uFACJC,IAAI,SAEN,4CAEF,qBAAKd,MAAM,QAAX,SACE,+BACE,6BACE,mBAAGe,KAAK,cAAR,oBAEF,6BACE,mBAAGA,KAAK,UAAR,uBAEF,6BACE,mBAAGA,KAAK,UAAR,wBAEF,6BACE,mBAAGA,KAAK,QAAQf,MAAM,MAAtB,2BAON,qBAAKA,MAAM,YAEX,qBAAKA,MAAM,kBAAX,SACE,qBAAKA,MAAM,eAKjB,kCACE,oBAAIA,MAAM,cAAV,SACE,sBAAKA,MAAM,UAAUgB,MAAM,SAA3B,UACE,oBAAIhB,MAAM,QAAV,qCACA,qBAAKA,MAAM,cAAcgB,MAAM,SAA/B,SACE,6BACE,6BACG5B,EAAY6B,KAAI,SAACC,GAAD,OACf,cAACV,EAAD,CAASG,QAASO,EAASR,WAAYE,SAAUM,EAASN,oBAMlE,sBAAKZ,MAAM,SAAX,UACE,uBAAOmB,IAAKtB,EAAcuB,KAAK,OAAOC,YAAY,mBAClD,uBAAOC,IAAI,MAAX,wBACA,uBAAOH,IAAKvB,EAAiBwB,KAAK,OAAOC,YAAY,mBAAmBE,GAAG,QAE3E,oBAAIvB,MAAM,SAEV,wBAAQA,MAAM,gBAAgBC,QAAS,kBA5GnD,WACE,IAAIuB,EAAa3B,EAAa4B,QAAQC,MAClCC,EAAqB/B,EAAgB6B,QAAQC,MAE7CjB,EAAc,sBAAOrB,GAAP,CAAoB,CAAEsB,WAAYc,EAAYZ,SAAUe,KAE1EtC,EAAeoB,GAEfZ,EAAa4B,QAAQC,MAAQ,GAC7B9B,EAAgB6B,QAAQC,MAAQ,GAmGuBE,IAA7C,+BAMN,oBAAI5B,MAAM,WAAV,SACE,sBAAKA,MAAM,UAAUgB,MAAM,SAA3B,UACE,oBAAIhB,MAAM,QAAV,+BAEA,sBAAKA,MAAM,eAAegB,MAAM,SAAhC,UACE,uBAAOG,IAAKzB,EAAW0B,KAAK,SAE5B,6BACE,6BACGlC,EAAa+B,KAAI,SAACC,GAAD,OAChB,cAACpB,EAAD,CACEM,KAAMc,EAASb,MACfC,UAAWY,EAASZ,UACpBC,QAASW,EAASX,oBAO5B,sBAAKP,MAAM,sBAAsBgB,MAAM,SAAvC,UACE,uBAAOG,IAAK7B,EAAY8B,KAAK,OAAOC,YAAY,cAAc,cAAY,gBAC1E,uBAAOC,IAAI,QAAX,0BACA,uBAAOH,IAAK3B,EAAgB4B,KAAK,OAAOG,GAAG,QAAQ,cAAY,gBAC/D,uBAAOD,IAAI,MAAX,wBACA,uBAAOH,IAAK1B,EAAc2B,KAAK,OAAOG,GAAG,MAAM,cAAY,cAE3D,oBAAIvB,MAAM,SAEV,wBAAQA,MAAM,gBAAgBC,QAAS,kBA/JnD,WACE,IAAI4B,EAAWvC,EAAWmC,QAAQC,MAC9BI,EAAetC,EAAeiC,QAAQC,MACtCK,EAAatC,EAAagC,QAAQC,MAClCM,EAAe,sBACd9C,GADc,CAEjB,CAAEmB,MAAOwB,EAAUvB,UAAWwB,EAAcvB,QAASwB,KAGvD5C,EAAgB6C,GAEhB1C,EAAWmC,QAAQC,MAAQ,GAC3BlC,EAAeiC,QAAQC,MAAQ,GAC/BjC,EAAagC,QAAQC,MAAQ,GAkJ0BO,IAA7C,kCAOR,qBAAKjC,MAAM,OAAOgB,MAAM,SAAxB,SACE,yBAAQhB,MAAM,WAAWC,QAAS,WA1ItCiC,MAAM,eAAgB,CACpBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAErD,aAAcA,EAAcE,YAAaA,EAAaO,SAAUA,MAEtF6C,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKE,eAAeC,OAAQF,IAC9CG,MAAMJ,EAAKE,eAAeD,IAE5BzD,EAAgBwD,EAAKK,iBACrB3D,EAAesD,EAAKM,oBA6HpB,UACG,IADH,6CAKF,qBAAKjD,MAAM,WAAWgB,MAAM,SAA5B,SACE,yBAAQhB,MAAM,WAAWC,QAAS,kBA/HxC,WACE,IAAMiD,EAAgBZ,KAAKC,UAAU,CACnCrD,aAAcA,EACdiE,YAAazD,EAAU+B,QAAQC,QAEjCQ,MAAM,YAAa,CACjBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMa,IAELV,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLxD,EAAgBwD,EAAKK,iBACrBI,OAAOC,SAASC,QAAQ,QAgHgBC,IAAxC,UACG,IADH,yDC7MOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fb871bd0.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useRef } from \"react\";\n\nfunction App() {\n  const [scheduleDict, setScheduleDict] = useState([]);\n  const [suggestDict, setSuggestDict] = useState([]);\n  const eventInput = useRef(\"\");\n  const startTimeInput = useRef(\"\");\n  const endTimeInput = useRef(\"\");\n  const dateInput = useRef(\"\");\n  const messages = useRef(\"\");\n  const suggestDuration = useRef(\"\");\n  const suggestInput = useRef(\"\");\n\n  //React component which returns the schedule list\n  function Schedule(props) {\n    function onDelete() {\n      const newDict = scheduleDict.filter((item) => item.event !== props.item);\n      setScheduleDict(newDict);\n    }\n    return (\n      <li>\n        <button class=\"delete-btn\" onClick={onDelete}>\n          {props.item} from {props.startTime} to {props.endTime}\n        </button>\n      </li>\n    );\n  }\n  //React component which returns the suggestions list\n  function Suggest(props) {\n    function onDelete() {\n      const newSuggestDict = suggestDict.filter((item) => item.suggestion !== props.suggest);\n      setSuggestDict(newSuggestDict);\n    }\n    \n    return (\n      <li>\n        <button class=\"delete-btn\" onClick={onDelete}>\n          {props.suggest} for {props.duration} hours\n        </button>\n      </li>\n    );\n  }\n  //Function which handles the add schedule event button\n  function onAddClick() {\n    let newEvent = eventInput.current.value;\n    let newStartTime = startTimeInput.current.value;\n    let newEndTime = endTimeInput.current.value;\n    let newScheduleDict = [\n      ...scheduleDict,\n      { event: newEvent, startTime: newStartTime, endTime: newEndTime },\n    ];\n\n    setScheduleDict(newScheduleDict);\n\n    eventInput.current.value = \"\";\n    startTimeInput.current.value = \"\";\n    endTimeInput.current.value = \"\";\n  }\n  //Function which handles the add an event suggestion button\n  function onAddClickSuggest() {\n    let newSuggest = suggestInput.current.value;\n    let newSuggestDuration = suggestDuration.current.value;\n\n    let newSuggestDict = [...suggestDict, { suggestion: newSuggest, duration: newSuggestDuration }];\n\n    setSuggestDict(newSuggestDict);\n\n    suggestInput.current.value = \"\";\n    suggestDuration.current.value = \"\";\n  }\n\n  function onSaveClick() {\n    fetch(\"/suggestions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ scheduleDict: scheduleDict, suggestDict: suggestDict, messages: messages }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        for (let i = 0; i < data.message_server.length; i++) {\n          alert(data.message_server[i]);\n        }\n        setScheduleDict(data.schedule_server);\n        setSuggestDict(data.suggest_server);\n      });\n  }\n\n  function onCompleteClick() {\n    const response_data = JSON.stringify({\n      scheduleDict: scheduleDict,\n      currentDate: dateInput.current.value,\n    });\n    fetch(\"/complete\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: response_data,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setScheduleDict(data.schedule_server);\n        window.location.replace(\"/\");\n      });\n  }\n\n  return (\n    <div class=\"big-wrapper standard\">\n      <header>\n        <div class=\"container\">\n          <div class=\"logo\">\n            <img\n              src=\"https://raw.githubusercontent.com/thanuavi1/lect20/master/imageedit_9_9613764135.png\"\n              alt=\"Logo\"\n            />\n            <h3>TODOit.</h3>\n          </div>\n          <div class=\"links\">\n            <ul>\n              <li>\n                <a href=\"landingpage\">Home</a>\n              </li>\n              <li>\n                <a href=\"purpose\">Purpose</a>\n              </li>\n              <li>\n                <a href=\"contact\">About Us</a>\n              </li>\n              <li>\n                <a href=\"login\" class=\"btn\">\n                  Logout\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          <div class=\"overlay\"></div>\n\n          <div class=\"hamburger-menu \">\n            <div class=\"bar\"></div>\n          </div>\n        </div>\n      </header>\n\n      <table>\n        <td class=\"suggestions\">\n          <div class=\"display\" align=\"center\">\n            <h2 class=\"title\">What I would like to do</h2>\n            <div class=\"suggestList\" align=\"center\">\n              <ul>\n                <li>\n                  {suggestDict.map((dictItem) => (\n                    <Suggest suggest={dictItem.suggestion} duration={dictItem.duration} />\n                  ))}\n                </li>\n              </ul>\n            </div>\n\n            <div class=\"inputs\">\n              <input ref={suggestInput} type=\"text\" placeholder=\"Input activity\" />\n              <label for=\"len\">Duration: </label>\n              <input ref={suggestDuration} type=\"text\" placeholder=\"00:00 (Hour:Min)\" id=\"len\" />\n\n              <hr class=\"line\" />\n\n              <button class=\"btn input-btn\" onClick={() => onAddClickSuggest()}>\n                Add Event\n              </button>\n            </div>\n          </div>\n        </td>\n        <td class=\"schedule\">\n          <div class=\"display\" align=\"center\">\n            <h2 class=\"title\">What I have to do</h2>\n\n            <div class=\"scheduleList\" align=\"center\">\n              <input ref={dateInput} type=\"date\" />\n\n              <ul>\n                <li>\n                  {scheduleDict.map((dictItem) => (\n                    <Schedule\n                      item={dictItem.event}\n                      startTime={dictItem.startTime}\n                      endTime={dictItem.endTime}\n                    />\n                  ))}\n                </li>\n              </ul>\n            </div>\n\n            <div class=\"editSchedule inputs\" align=\"center\">\n              <input ref={eventInput} type=\"text\" placeholder=\"Input event\" data-testid=\"event_input\" />\n              <label for=\"start\">start time: </label>\n              <input ref={startTimeInput} type=\"time\" id=\"start\" data-testid=\"start_input\" />\n              <label for=\"end\">end time: </label>\n              <input ref={endTimeInput} type=\"time\" id=\"end\" data-testid=\"end_input\" />\n\n              <hr class=\"line\" />\n\n              <button class=\"btn input-btn\" onClick={() => onAddClick()}>\n                Add Event\n              </button>\n            </div>\n          </div>\n        </td>\n      </table>\n      <div class=\"Save\" align=\"center\">\n        <button class=\"btn btn1\" onClick={() => onSaveClick()}>\n          {\" \"}\n          Save Schedule and receive suggestions\n        </button>\n      </div>\n      <div class=\"Complete\" align=\"center\">\n        <button class=\"btn btn1\" onClick={() => onCompleteClick()}>\n          {\" \"}\n          Complete Schedule and save to google calendar\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}