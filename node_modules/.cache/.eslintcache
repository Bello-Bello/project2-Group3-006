[{"/home/azureuser/project2-savirneni1/src/index.js":"1","/home/azureuser/project2-savirneni1/src/App.js":"2","/home/azureuser/project2-savirneni1/src/reportWebVitals.js":"3"},{"size":501,"mtime":1637102765581,"results":"4","hashOfConfig":"5"},{"size":8959,"mtime":1638056952687,"results":"6","hashOfConfig":"5"},{"size":364,"mtime":1637102765581,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eiga0c",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/azureuser/project2-savirneni1/src/index.js",[],"/home/azureuser/project2-savirneni1/src/App.js",["15"],"import \"./App.css\";\nimport React, { useState, useRef } from \"react\";\n\nfunction App() {\n  const [scheduleDict, setScheduleDict] = useState([]);\n  const [suggestDict, setSuggestDict] = useState([]);\n  const eventInput = useRef(\"\");\n  const startTimeInput = useRef(\"\");\n  const endTimeInput = useRef(\"\");\n  const dateInput = useRef(\"\");\n  const messages = useRef(\"\");\n  const suggestDuration = useRef(\"\");\n  const suggestInput = useRef(\"\");\n\n  //React component which returns the schedule list\n  function Schedule(props) {\n    function onDelete() {\n      const newDict = scheduleDict.filter((item) => item.event !== props.item);\n      setScheduleDict(newDict);\n    }\n    return (\n      <li>\n        <button class=\"delete-btn\" onClick={onDelete}>\n          {props.item} from {props.startTime} to {props.endTime}\n        </button>\n      </li>\n    );\n  }\n  //React component which returns the suggestions list\n  function Suggest(props) {\n    function onDelete() {\n      const newSuggestDict = suggestDict.filter((item) => item.suggestion !== props.suggest);\n      setSuggestDict(newSuggestDict);\n    }\n\n    return (\n      <li>\n        <button class=\"delete-btn\" onClick={onDelete}>\n          {props.suggest} for {props.duration} hours\n        </button>\n      </li>\n    );\n  }\n  //Function which handles the add schedule event button\n  function onAddClick() {\n    let newEvent = eventInput.current.value;\n    let newStartTime = startTimeInput.current.value;\n    let newEndTime = endTimeInput.current.value;\n    let newScheduleDict = [\n      ...scheduleDict,\n      { event: newEvent, startTime: newStartTime, endTime: newEndTime },\n    ];\n\n    setScheduleDict(newScheduleDict);\n\n    eventInput.current.value = \"\";\n    startTimeInput.current.value = \"\";\n    endTimeInput.current.value = \"\";\n  }\n  //Function which handles the add an event suggestion button\n  function onAddClickSuggest() {\n    let newSuggest = suggestInput.current.value;\n    let newSuggestDuration = suggestDuration.current.value;\n\n    let newSuggestDict = [...suggestDict, { suggestion: newSuggest, duration: newSuggestDuration }];\n\n    setSuggestDict(newSuggestDict);\n\n    suggestInput.current.value = \"\";\n    suggestDuration.current.value = \"\";\n  }\n\n  function onSaveClick() {\n    fetch(\"/suggestions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ scheduleDict: scheduleDict, suggestDict: suggestDict }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message_server.length === 1) {\n          alert(data.message_server[0]);\n        } else {\n          var scheduleUpdate = data.schedule_server;\n          var suggestUpdate = data.suggest_server;\n          var addedSuggestions = [];\n          var suggestList = data.suggestions_server;\n\n          for (var i in suggestList) {\n            var suggestNotif = suggestList[i];\n            var suggest = suggestNotif.suggestion;\n            //If statement makes sure that a suggestion for this event has not been accepted already, and if the user accepts the suggestion\n            if (\n              addedSuggestions.indexOf(suggestNotif.suggestEvent) === -1 &&\n              window.confirm(suggest) === true\n            ) {\n              let newScheduleDict = [\n                ...scheduleUpdate,\n                {\n                  event: suggestNotif.suggestEvent,\n                  startTime: suggestNotif.suggestStartTime,\n                  endTime: suggestNotif.suggestEndTime,\n                },\n              ];\n              scheduleUpdate = newScheduleDict;\n              //Schedule is kept in order by sorting function on the server side\n              fetch(\"/sorting\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ unsortedSchedule: scheduleUpdate }),\n              })\n                .then((response) => response.json())\n                .then((data) => {\n                  if (data.message_server.length === 1) {\n                    alert(data.message_server[0]);\n                  } else {\n                    setScheduleDict(data.server_sorted_Schedule);\n                  }\n                });\n              // eslint-disable-next-line\n              suggestUpdate = suggestUpdate.filter((item) => item.suggestion !== suggestNotif.suggestEvent);\n              setSuggestDict(suggestUpdate);\n              //Event is now added to the addedSuggestions list so that other suggestions for this even do not appear\n              addedSuggestions.push(suggestNotif.suggestEvent);\n            }\n          }\n        }\n      });\n  }\n\n  function onCompleteClick() {\n    const response_data = JSON.stringify({\n      scheduleDict: scheduleDict,\n      currentDate: dateInput.current.value,\n    });\n    fetch(\"/complete\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: response_data,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setScheduleDict(data.schedule_server);\n        window.location.replace(\"/\");\n      });\n  }\n\n  return (\n    <div class=\"big-wrapper standard\">\n      <img\n        src=\"https://raw.githubusercontent.com/thanuavi1/lect20/master/Untitled%20design-2.png\"\n        alt=\"\"\n        class=\"shape\"\n      />\n      <header>\n        <div class=\"container\">\n          <div class=\"logo\">\n            <img\n              src=\"https://raw.githubusercontent.com/thanuavi1/lect20/master/imageedit_9_9613764135.png\"\n              alt=\"Logo\"\n            />\n            <h3>TODOit.</h3>\n          </div>\n          <div class=\"links\">\n            <ul>\n              <li>\n                <a href=\"landingpage\">Home</a>\n              </li>\n              <li>\n                <a href=\"purpose\">Purpose</a>\n              </li>\n              <li>\n                <a href=\"contact\">About Us</a>\n              </li>\n              <li>\n                <a href=\"login\" class=\"btn\">\n                  Logout\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          <div class=\"overlay\"></div>\n\n          <div class=\"hamburger-menu \">\n            <div class=\"bar\"></div>\n          </div>\n        </div>\n      </header>\n\n      <table>\n        <td class=\"suggestions\">\n          <div class=\"display\" align=\"center\">\n            <h2 class=\"title\">What I would like to do</h2>\n            <div class=\"suggestList\" align=\"center\">\n              <ul>\n                <li>\n                  {suggestDict.map((dictItem) => (\n                    <Suggest suggest={dictItem.suggestion} duration={dictItem.duration} />\n                  ))}\n                </li>\n              </ul>\n            </div>\n\n            <div class=\"inputs\">\n              <input ref={suggestInput} type=\"text\" placeholder=\"Input activity\" />\n              <label for=\"len\">Duration: </label>\n              <input ref={suggestDuration} type=\"text\" placeholder=\"00:00 (Hour:Min)\" id=\"len\" />\n\n              <hr class=\"line\" />\n\n              <button class=\"btn input-btn\" onClick={() => onAddClickSuggest()}>\n                Add Event\n              </button>\n            </div>\n          </div>\n        </td>\n        <td class=\"schedule\">\n          <div class=\"display\" align=\"center\">\n            <h2 class=\"title\">What I have to do</h2>\n\n            <div class=\"scheduleList\" align=\"center\">\n              <input ref={dateInput} type=\"date\" />\n\n              <ul>\n                <li>\n                  {scheduleDict.map((dictItem) => (\n                    <Schedule\n                      item={dictItem.event}\n                      startTime={dictItem.startTime}\n                      endTime={dictItem.endTime}\n                    />\n                  ))}\n                </li>\n              </ul>\n            </div>\n\n            <div class=\"editSchedule inputs\" align=\"center\">\n              <input ref={eventInput} type=\"text\" placeholder=\"Input event\" data-testid=\"event_input\" />\n              <label for=\"start\">start time: </label>\n              <input ref={startTimeInput} type=\"time\" id=\"start\" data-testid=\"start_input\" />\n              <label for=\"end\">end time: </label>\n              <input ref={endTimeInput} type=\"time\" id=\"end\" data-testid=\"end_input\" />\n\n              <hr class=\"line\" />\n\n              <button class=\"btn input-btn\" onClick={() => onAddClick()}>\n                Add Event\n              </button>\n            </div>\n          </div>\n        </td>\n      </table>\n      <div class=\"Save\" align=\"center\">\n        <button class=\"btn btn1\" onClick={() => onSaveClick()}>\n          Save Schedule and receive suggestions\n        </button>\n      </div>\n      <div class=\"Complete\" align=\"center\">\n        <button class=\"btn btn1\" onClick={() => onCompleteClick()}>\n          Complete Schedule and save to google calendar\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/azureuser/project2-savirneni1/src/reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":11,"column":9,"nodeType":"18","messageId":"19","endLine":11,"endColumn":17},"no-unused-vars","'messages' is assigned a value but never used.","Identifier","unusedVar"]