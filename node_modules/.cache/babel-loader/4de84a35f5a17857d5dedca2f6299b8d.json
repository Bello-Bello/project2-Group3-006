{"ast":null,"code":"var _jsxFileName = \"/home/nparker19/project2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [scheduleDict, setScheduleDict] = useState([]);\n  const textInput = useRef('');\n  const timeInput = useRef('');\n\n  function Schedule(props) {\n    function onDelete() {\n      const newDict = scheduleDict.filter(item => item.event !== props.item);\n      setScheduleDict(newDict);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [props.item, \" at \", props.time, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDelete,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  function onButtonClick() {\n    let newTask = textInput.current.value;\n    let newTime = timeInput.current.value;\n    let newScheduleDict = [...scheduleDict, {\n      \"event\": newTask,\n      \"time\": newTime\n    }];\n    setScheduleDict(newScheduleDict);\n    textInput.current.value = \"\";\n    timeInput.current.value = \"\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"idList\",\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: scheduleDict.map(dictItem => /*#__PURE__*/_jsxDEV(Schedule, {\n          item: dictItem.event,\n          time: dictItem.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"editSchedule\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: textInput,\n        type: \"text\",\n        placeholder: \"Input event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeInput,\n        type: \"text\",\n        placeholder: \"Input starting time for event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onButtonClick(),\n        children: \" Add Event to Schedule \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"O+WwKlvNP1EEgB9i+MdIRUjrZso=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nparker19/project2/src/App.js"],"names":["React","useState","useRef","App","scheduleDict","setScheduleDict","textInput","timeInput","Schedule","props","onDelete","newDict","filter","item","event","time","onButtonClick","newTask","current","value","newTime","newScheduleDict","map","dictItem"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMK,SAAS,GAAGJ,MAAM,CAAC,EAAD,CAAxB;AACA,QAAMK,SAAS,GAAGL,MAAM,CAAC,EAAD,CAAxB;;AAEA,WAASM,QAAT,CAAkBC,KAAlB,EAAyB;AAEvB,aAASC,QAAT,GAAoB;AAClB,YAAMC,OAAO,GAAGP,YAAY,CAACQ,MAAb,CAAqBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeL,KAAK,CAACI,IAAnD,CAAhB;AACAR,MAAAA,eAAe,CAACM,OAAD,CAAf;AACD;;AACD,wBACE;AAAA,iBAAKF,KAAK,CAACI,IAAX,UAAqBJ,KAAK,CAACM,IAA3B,oBAAiC;AAAQ,QAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,WAASM,aAAT,GAAyB;AACvB,QAAIC,OAAO,GAAGX,SAAS,CAACY,OAAV,CAAkBC,KAAhC;AACA,QAAIC,OAAO,GAAGb,SAAS,CAACW,OAAV,CAAkBC,KAAhC;AACA,QAAIE,eAAe,GAAG,CAAC,GAAGjB,YAAJ,EAAkB;AAAE,eAASa,OAAX;AAAoB,cAAQG;AAA5B,KAAlB,CAAtB;AAEAf,IAAAA,eAAe,CAACgB,eAAD,CAAf;AAEAf,IAAAA,SAAS,CAACY,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;AACAZ,IAAAA,SAAS,CAACW,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAoB,MAAA,KAAK,EAAC,QAA1B;AAAA,6BACE;AAAA,kBAAKf,YAAY,CAACkB,GAAb,CAAkBC,QAAD,iBAAc,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,QAAQ,CAACT,KAAzB;AAAgC,UAAA,IAAI,EAAES,QAAQ,CAACR;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAA/B;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAK,MAAA,KAAK,EAAC,cAAX;AAA0B,MAAA,KAAK,EAAC,QAAhC;AAAA,8BACE;AAAO,QAAA,GAAG,EAAET,SAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAEC,SAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMS,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAiBD;;GA7CQb,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useRef } from 'react';\n\n\n\nfunction App() {\n\n  const [scheduleDict, setScheduleDict] = useState([]);\n\n  const textInput = useRef('');\n  const timeInput = useRef('');\n\n  function Schedule(props) {\n\n    function onDelete() {\n      const newDict = scheduleDict.filter((item) => item.event !== props.item);\n      setScheduleDict(newDict);\n    }\n    return (\n      <h3>{props.item} at {props.time} <button onClick={onDelete}>X</button></h3>\n    );\n  }\n\n  function onButtonClick() {\n    let newTask = textInput.current.value;\n    let newTime = timeInput.current.value;\n    let newScheduleDict = [...scheduleDict, { \"event\": newTask, \"time\": newTime }];\n\n    setScheduleDict(newScheduleDict);\n\n    textInput.current.value = \"\";\n    timeInput.current.value = \"\";\n  }\n  return (\n    <>\n      <h1>Create Schedule</h1>\n\n      <div class=\"idList\" align=\"center\">\n        <h3>{scheduleDict.map((dictItem) => <Schedule item={dictItem.event} time={dictItem.time} />)}</h3>\n      </div>\n\n      <div class=\"editSchedule\" align=\"center\">\n        <input ref={textInput} type=\"text\" placeholder=\"Input event\" />\n        <input ref={timeInput} type=\"text\" placeholder=\"Input starting time for event\" />\n        <button onClick={() => onButtonClick()}> Add Event to Schedule </button>\n      </div>\n    </>\n\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}