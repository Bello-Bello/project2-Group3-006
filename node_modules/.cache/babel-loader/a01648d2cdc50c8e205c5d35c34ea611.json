{"ast":null,"code":"import _toConsumableArray from\"/home/nparker19/project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/nparker19/project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import React,{useState,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),scheduleDict=_useState2[0],setScheduleDict=_useState2[1];var eventInput=useRef('');var startTimeInput=useRef('');var endTimeInput=useRef('');var dateInput=useRef('');var messages=useRef('');function Schedule(props){function onDelete(){var newDict=scheduleDict.filter(function(item){return item.event!==props.item;});setScheduleDict(newDict);}return/*#__PURE__*/_jsxs(\"h2\",{children:[props.item,\" from \",props.startTime,\" to \",props.endTime,/*#__PURE__*/_jsx(\"button\",{onClick:onDelete,children:\"X\"})]});}function onAddClick(){var newEvent=eventInput.current.value;var newStartTime=startTimeInput.current.value;var newEndTime=endTimeInput.current.value;var newScheduleDict=[].concat(_toConsumableArray(scheduleDict),[{\"event\":newEvent,\"startTime\":newStartTime,\"endTime\":newEndTime}]);setScheduleDict(newScheduleDict);eventInput.current.value=\"\";startTimeInput.current.value=\"\";endTimeInput.current.value=\"\";}function onSaveClick(){fetch('/suggestions',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({\"scheduleDict\":scheduleDict,\"messages\":messages})}).then(function(response){return response.json();}).then(function(data){for(var i=0;i<data.message_server.length;i++){alert(data.message_server[i]);}setScheduleDict(data.schedule_server);});}function onCompleteClick(){var response_data=JSON.stringify({\"scheduleDict\":scheduleDict,\"currentDate\":dateInput.current.value});fetch('/complete',{method:'POST',headers:{'Content-Type':'application/json'},body:response_data}).then(function(response){return response.json();}).then(function(data){setScheduleDict(data.schedule_server);window.location.replace(\"/\");});}return/*#__PURE__*/_jsxs(\"div\",{class:\"display\",align:\"center\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create Schedule\"}),/*#__PURE__*/_jsx(\"input\",{ref:dateInput,type:\"date\"}),/*#__PURE__*/_jsx(\"div\",{class:\"scheduleList\",align:\"center\",children:/*#__PURE__*/_jsx(\"h2\",{children:scheduleDict.map(function(dictItem){return/*#__PURE__*/_jsx(Schedule,{item:dictItem.event,startTime:dictItem.startTime,endTime:dictItem.endTime});})})}),/*#__PURE__*/_jsxs(\"div\",{class:\"editSchedule\",align:\"center\",children:[/*#__PURE__*/_jsx(\"input\",{ref:eventInput,type:\"text\",placeholder:\"Input event\",\"data-testid\":\"event_input\"}),/*#__PURE__*/_jsx(\"label\",{for:\"start\",children:\"Input event start time\"}),/*#__PURE__*/_jsx(\"input\",{ref:startTimeInput,type:\"time\",id:\"start\",\"data-testid\":\"start_input\"}),/*#__PURE__*/_jsx(\"label\",{for:\"end\",children:\"Input event end time\"}),/*#__PURE__*/_jsx(\"input\",{ref:endTimeInput,type:\"time\",id:\"end\",\"data-testid\":\"end_input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return onAddClick();},children:\" Add Event \"}),/*#__PURE__*/_jsx(\"div\",{class:\"Save\",align:\"center\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return onSaveClick();},children:\" Save Schedule and receive suggestions\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"Complete\",align:\"center\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return onCompleteClick();},children:\" Complete Schedule and save to google calendar\"})})]})]});}export default App;","map":{"version":3,"sources":["/home/nparker19/project2/src/App.js"],"names":["React","useState","useRef","App","scheduleDict","setScheduleDict","eventInput","startTimeInput","endTimeInput","dateInput","messages","Schedule","props","onDelete","newDict","filter","item","event","startTime","endTime","onAddClick","newEvent","current","value","newStartTime","newEndTime","newScheduleDict","onSaveClick","fetch","method","headers","body","JSON","stringify","then","response","json","data","i","message_server","length","alert","schedule_server","onCompleteClick","response_data","window","location","replace","map","dictItem"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useRef } from 'react';\n\n\nfunction App() {\n\n  const [scheduleDict, setScheduleDict] = useState([]);\n  const eventInput = useRef('');\n  const startTimeInput = useRef('');\n  const endTimeInput = useRef('');\n  const dateInput = useRef('');\n  const messages = useRef('');\n\n  function Schedule(props) {\n\n    function onDelete() {\n      const newDict = scheduleDict.filter((item) => item.event !== props.item);\n      setScheduleDict(newDict);\n    }\n    return (\n      <h2>{props.item} from {props.startTime} to {props.endTime}<button onClick={onDelete}>X</button></h2>\n    );\n  }\n\n  function onAddClick() {\n    let newEvent = eventInput.current.value;\n    let newStartTime = startTimeInput.current.value;\n    let newEndTime = endTimeInput.current.value;\n    let newScheduleDict = [...scheduleDict, { \"event\": newEvent, \"startTime\": newStartTime, \"endTime\": newEndTime }];\n\n    setScheduleDict(newScheduleDict);\n\n    eventInput.current.value = \"\";\n    startTimeInput.current.value = \"\";\n    endTimeInput.current.value = \"\";\n  }\n\n  function onSaveClick() {\n\n    fetch('/suggestions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \"scheduleDict\": scheduleDict, \"messages\": messages }),\n    }).then(response => response.json()).then(data => {\n      for (let i = 0; i < data.message_server.length; i++) {\n        alert(data.message_server[i]);\n      }\n      setScheduleDict(data.schedule_server);\n    });\n  }\n\n  function onCompleteClick() {\n    const response_data = JSON.stringify({ \"scheduleDict\": scheduleDict, \"currentDate\": dateInput.current.value });\n    fetch('/complete', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: response_data,\n    }).then(response => response.json()).then(data => {\n      setScheduleDict(data.schedule_server);\n      window.location.replace(\"/\");\n    });\n\n  }\n\n  return (\n    <div class=\"display\" align=\"center\">\n      <h1>Create Schedule</h1>\n\n      <input ref={dateInput} type=\"date\" />\n\n      <div class=\"scheduleList\" align=\"center\">\n        <h2>{scheduleDict.map((dictItem) => <Schedule item={dictItem.event} startTime={dictItem.startTime} endTime={dictItem.endTime} />)}</h2>\n      </div>\n\n      <div class=\"editSchedule\" align=\"center\">\n        <input ref={eventInput} type=\"text\" placeholder=\"Input event\" data-testid=\"event_input\" />\n        <label for=\"start\">Input event start time</label>\n        <input ref={startTimeInput} type=\"time\" id=\"start\" data-testid=\"start_input\" />\n        <label for=\"end\">Input event end time</label>\n        <input ref={endTimeInput} type=\"time\" id=\"end\" data-testid=\"end_input\" />\n\n        <button onClick={() => onAddClick()}> Add Event </button>\n\n        <div class=\"Save\" align=\"center\">\n          <button onClick={() => onSaveClick()}> Save Schedule and receive suggestions</button>\n        </div>\n        <div class=\"Complete\" align=\"center\">\n          <button onClick={() => onCompleteClick()}> Complete Schedule and save to google calendar</button>\n        </div>\n\n      </div>\n    </div>\n\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}