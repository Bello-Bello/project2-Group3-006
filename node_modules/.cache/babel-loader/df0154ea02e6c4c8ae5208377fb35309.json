{"ast":null,"code":"import _toConsumableArray from\"/home/nparker19/project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/nparker19/project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import React,{useState,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),scheduleDict=_useState2[0],setScheduleDict=_useState2[1];var textInput=useRef('');var timeInput=useRef('');console.log(scheduleDict);function Schedule(props){function onDelete(){var newDict=scheduleDict.filter(function(item){return item.event!==props.item;});setScheduleDict(newDict);}return/*#__PURE__*/_jsxs(\"h3\",{children:[props.item,\" at \",props.time,\" \",/*#__PURE__*/_jsx(\"button\",{onClick:onDelete,children:\"X\"})]});}function onButtonClick(){var newTask=textInput.current.value;var newTime=timeInput.current.value;var newScheduleDict=[].concat(_toConsumableArray(scheduleDict),[{\"event\":newTask,\"time\":newTime}]);setScheduleDict(newScheduleDict);textInput.current.value=\"\";timeInput.current.value=\"\";}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create Schedule\"}),/*#__PURE__*/_jsx(\"div\",{class:\"idList\",align:\"right\",children:/*#__PURE__*/_jsx(\"h3\",{children:scheduleDict.map(function(dictItem){return/*#__PURE__*/_jsx(Schedule,{item:dictItem.event,time:dictItem.time});})})}),/*#__PURE__*/_jsxs(\"div\",{class:\"editSchedule\",align:\"center\",children:[/*#__PURE__*/_jsx(\"input\",{ref:textInput,type:\"text\"}),/*#__PURE__*/_jsx(\"input\",{ref:timeInput,type:\"text\",placeholder:\"Input time for task\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return onButtonClick();},children:\" Add \"})]})]});}export default App;","map":{"version":3,"sources":["/home/nparker19/project2/src/App.js"],"names":["React","useState","useRef","App","scheduleDict","setScheduleDict","textInput","timeInput","console","log","Schedule","props","onDelete","newDict","filter","item","event","time","onButtonClick","newTask","current","value","newTime","newScheduleDict","map","dictItem"],"mappings":"sSAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,C,6IAIA,QAASC,CAAAA,GAAT,EAAe,CAEb,cAAwCF,QAAQ,CAAC,EAAD,CAAhD,wCAAOG,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,SAAS,CAAGJ,MAAM,CAAC,EAAD,CAAxB,CACA,GAAMK,CAAAA,SAAS,CAAGL,MAAM,CAAC,EAAD,CAAxB,CAEAM,OAAO,CAACC,GAAR,CAAYL,YAAZ,EACA,QAASM,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB,QAASC,CAAAA,QAAT,EAAoB,CAClB,GAAMC,CAAAA,OAAO,CAAGT,YAAY,CAACU,MAAb,CAAoB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,KAAL,GAAeL,KAAK,CAACI,IAA/B,EAApB,CAAhB,CACAV,eAAe,CAACQ,OAAD,CAAf,CACD,CACD,mBACE,sBAAKF,KAAK,CAACI,IAAX,QAAqBJ,KAAK,CAACM,IAA3B,kBAAiC,eAAQ,OAAO,CAAEL,QAAjB,eAAjC,GADF,CAID,CAED,QAASM,CAAAA,aAAT,EAAyB,CACvB,GAAIC,CAAAA,OAAO,CAAGb,SAAS,CAACc,OAAV,CAAkBC,KAAhC,CACA,GAAIC,CAAAA,OAAO,CAAGf,SAAS,CAACa,OAAV,CAAkBC,KAAhC,CACA,GAAIE,CAAAA,eAAe,8BAAOnB,YAAP,GAAqB,CAAE,QAASe,OAAX,CAAoB,OAAQG,OAA5B,CAArB,EAAnB,CAEAjB,eAAe,CAACkB,eAAD,CAAf,CAEAjB,SAAS,CAACc,OAAV,CAAkBC,KAAlB,CAA0B,EAA1B,CACAd,SAAS,CAACa,OAAV,CAAkBC,KAAlB,CAA0B,EAA1B,CACD,CACD,mBACE,wCACE,uCADF,cAGE,YAAK,KAAK,CAAC,QAAX,CAAoB,KAAK,CAAC,OAA1B,uBACE,oBAAKjB,YAAY,CAACoB,GAAb,CAAiB,SAACC,QAAD,qBAAc,KAAC,QAAD,EAAU,IAAI,CAAEA,QAAQ,CAACT,KAAzB,CAAgC,IAAI,CAAES,QAAQ,CAACR,IAA/C,EAAd,EAAjB,CAAL,EADF,EAHF,cAME,aAAK,KAAK,CAAC,cAAX,CAA0B,KAAK,CAAC,QAAhC,wBACE,cAAO,GAAG,CAAEX,SAAZ,CAAuB,IAAI,CAAC,MAA5B,EADF,cAEE,cAAO,GAAG,CAAEC,SAAZ,CAAuB,IAAI,CAAC,MAA5B,CAAmC,WAAW,CAAC,qBAA/C,EAFF,cAGE,eAAQ,OAAO,CAAE,yBAAMW,CAAAA,aAAa,EAAnB,EAAjB,mBAHF,GANF,GADF,CAgBD,CAED,cAAef,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useRef } from 'react';\n\n\n\nfunction App() {\n\n  const [scheduleDict, setScheduleDict] = useState([]);\n\n  const textInput = useRef('');\n  const timeInput = useRef('');\n\n  console.log(scheduleDict)\n  function Schedule(props) {\n    function onDelete() {\n      const newDict = scheduleDict.filter((item) => item.event !== props.item);\n      setScheduleDict(newDict);\n    }\n    return (\n      <h3>{props.item} at {props.time} <button onClick={onDelete}>X</button></h3>\n\n    );\n  }\n\n  function onButtonClick() {\n    let newTask = textInput.current.value;\n    let newTime = timeInput.current.value;\n    let newScheduleDict = [...scheduleDict, { \"event\": newTask, \"time\": newTime }];\n\n    setScheduleDict(newScheduleDict);\n\n    textInput.current.value = \"\";\n    timeInput.current.value = \"\";\n  }\n  return (\n    <>\n      <h1>Create Schedule</h1>\n\n      <div class=\"idList\" align=\"right\">\n        <h3>{scheduleDict.map((dictItem) => <Schedule item={dictItem.event} time={dictItem.time} />)}</h3>\n      </div>\n      <div class=\"editSchedule\" align=\"center\">\n        <input ref={textInput} type=\"text\" />\n        <input ref={timeInput} type=\"text\" placeholder=\"Input time for task\" />\n        <button onClick={() => onButtonClick()}> Add </button>\n      </div>\n    </>\n\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}